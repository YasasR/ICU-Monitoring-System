/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class AdminGUI extends javax.swing.JFrame {
        Connection con=null;
        PreparedStatement pst=null;
        Statement st=null;
        ResultSet rs=null;
        String hos=null;
    /**
     * Creates new form AdminGUI
     */
    public AdminGUI() {
        initComponents();
         this.setLocation(300, 100);
        initialize();
        try {
            con=DbUtill.getConnection();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        displaydata();
        setHospitals();
    }

    public AdminGUI(String hos) {
        initComponents();
         this.setLocation(300, 100);
        initialize();
        try {
            con=DbUtill.getConnection();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        displaydata();
        this.hos=hos;
        setHospitals();
        
    }
    
    private void initialize(){
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ico.png")));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        AddLoc = new javax.swing.JTextField();
        deletehos = new javax.swing.JTextField();
        jButton3delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Adhosnm = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        icuhos = new javax.swing.JComboBox<>();
        beds = new javax.swing.JTextField();
        icuid = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        location = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        DirID = new javax.swing.JTextField();
        Dirname = new javax.swing.JTextField();
        Dloc = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        Dhos = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lochos = new javax.swing.JTextField();
        lat = new javax.swing.JTextField();
        lang = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        loctable = new javax.swing.JTable();
        locadd = new javax.swing.JButton();
        locupd = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        Adminmenu = new javax.swing.JMenu();
        changepass = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        logout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADMINISTRATER");
        setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane2.setBackground(new java.awt.Color(26, 144, 176));

        jPanel1.setMaximumSize(new java.awt.Dimension(790, 693));
        jPanel1.setMinimumSize(new java.awt.Dimension(790, 693));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hos_addicon.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setFocusPainted(false);
        jButton1.setMaximumSize(new java.awt.Dimension(65, 23));
        jButton1.setMinimumSize(new java.awt.Dimension(65, 23));
        jButton1.setPreferredSize(new java.awt.Dimension(65, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 100, 82, 70));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hos_clearicon.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 110, 82, 50));

        AddLoc.setBackground(new java.awt.Color(198, 240, 252));
        AddLoc.setBorder(null);
        AddLoc.setPreferredSize(new java.awt.Dimension(240, 35));
        AddLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddLocActionPerformed(evt);
            }
        });
        jPanel1.add(AddLoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 370, 20));

        deletehos.setBackground(new java.awt.Color(198, 240, 252));
        deletehos.setBorder(null);
        deletehos.setPreferredSize(new java.awt.Dimension(240, 35));
        deletehos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletehosActionPerformed(evt);
            }
        });
        jPanel1.add(deletehos, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 269, 370, 20));

        jButton3delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hos_deleteicon.png"))); // NOI18N
        jButton3delete.setBorderPainted(false);
        jButton3delete.setContentAreaFilled(false);
        jButton3delete.setFocusPainted(false);
        jButton3delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3deleteActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 240, 82, 60));

        jTable1.setBackground(new java.awt.Color(198, 240, 252));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, 550, 140));

        Adhosnm.setBackground(new java.awt.Color(198, 240, 252));
        Adhosnm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        Adhosnm.setMinimumSize(new java.awt.Dimension(54, 25));
        Adhosnm.setPreferredSize(new java.awt.Dimension(54, 25));
        jPanel1.add(Adhosnm, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 100, 380, 30));
        Adhosnm.getAccessibleContext().setAccessibleName("");

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/adminhos.jpg"))); // NOI18N
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 550));

        jTabbedPane2.addTab("HOSPITAL", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable2.setBackground(new java.awt.Color(235, 219, 189));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ICUID", "Hospital Name", "Location", "Beds", "Available Beds"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 670, 180));

        icuhos.setBackground(new java.awt.Color(235, 219, 189));
        icuhos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        icuhos.setBorder(null);
        icuhos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                icuhosItemStateChanged(evt);
            }
        });
        icuhos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                icuhosMouseClicked(evt);
            }
        });
        icuhos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                icuhosActionPerformed(evt);
            }
        });
        jPanel2.add(icuhos, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 300, 25));
        icuhos.getAccessibleContext().setAccessibleName("");
        icuhos.getAccessibleContext().setAccessibleDescription("");

        beds.setBackground(new java.awt.Color(235, 219, 189));
        beds.setBorder(null);
        jPanel2.add(beds, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 220, 39, 20));

        icuid.setBackground(new java.awt.Color(235, 219, 189));
        icuid.setBorder(null);
        icuid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                icuidActionPerformed(evt);
            }
        });
        jPanel2.add(icuid, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 176, 270, 20));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bradd.png"))); // NOI18N
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 80, -1, -1));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/brcl.png"))); // NOI18N
        jButton5.setBorder(null);
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setFocusPainted(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 140, -1, -1));

        location.setEditable(false);
        location.setBackground(new java.awt.Color(235, 219, 189));
        location.setBorder(null);
        location.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                locationMouseClicked(evt);
            }
        });
        location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationActionPerformed(evt);
            }
        });
        jPanel2.add(location, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 280, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ICUBack.jpg"))); // NOI18N
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 540));

        jTabbedPane2.addTab("ICU", jPanel2);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DirID.setBackground(new java.awt.Color(223, 231, 234));
        DirID.setBorder(null);
        DirID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirIDActionPerformed(evt);
            }
        });
        jPanel4.add(DirID, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 48, 270, 20));

        Dirname.setBackground(new java.awt.Color(223, 231, 234));
        Dirname.setBorder(null);
        Dirname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirnameActionPerformed(evt);
            }
        });
        jPanel4.add(Dirname, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 270, 20));

        Dloc.setEditable(false);
        Dloc.setBackground(new java.awt.Color(223, 231, 234));
        Dloc.setBorder(null);
        Dloc.setDisabledTextColor(new java.awt.Color(223, 231, 234));
        Dloc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DlocMouseClicked(evt);
            }
        });
        Dloc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DlocActionPerformed(evt);
            }
        });
        jPanel4.add(Dloc, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 200, 270, 30));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Dir_add.png"))); // NOI18N
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 70, 60, -1));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Dir_clear.png"))); // NOI18N
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.setFocusPainted(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, -1, -1));

        Dhos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        Dhos.setBorder(null);
        jPanel4.add(Dhos, new org.netbeans.lib.awtextra.AbsoluteConstraints(293, 145, 286, 32));
        Dhos.getAccessibleContext().setAccessibleName("");
        Dhos.getAccessibleContext().setAccessibleDescription("");

        jTable3.setBackground(new java.awt.Color(223, 231, 234));
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Director ID", "Director Name", "Hospital", "Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable3);

        jPanel4.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 300, 670, 190));

        jLabel2.setBackground(new java.awt.Color(223, 231, 234));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ad_dir.png"))); // NOI18N
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 4, 790, 540));

        jTabbedPane2.addTab("DIRECTOR", jPanel4);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lochos.setBackground(new java.awt.Color(222, 223, 226));
        lochos.setBorder(null);
        lochos.setOpaque(false);
        lochos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lochosActionPerformed(evt);
            }
        });
        jPanel3.add(lochos, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 65, 338, 33));

        lat.setBackground(new java.awt.Color(222, 223, 226));
        lat.setBorder(null);
        lat.setOpaque(false);
        jPanel3.add(lat, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 135, 245, 28));

        lang.setBackground(new java.awt.Color(222, 223, 226));
        lang.setBorder(null);
        lang.setOpaque(false);
        lang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                langActionPerformed(evt);
            }
        });
        jPanel3.add(lang, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 240, 30));

        loctable.setBackground(new java.awt.Color(217, 219, 223));
        loctable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Hospital Name", "Latitude", "Longitude"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        loctable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loctableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(loctable);

        jPanel3.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, 300, 370));

        locadd.setBackground(new java.awt.Color(147, 172, 189));
        locadd.setText("ADD");
        locadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locaddActionPerformed(evt);
            }
        });
        jPanel3.add(locadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 326, 90, 35));

        locupd.setBackground(new java.awt.Color(147, 172, 189));
        locupd.setText("UPDATE");
        locupd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locupdActionPerformed(evt);
            }
        });
        jPanel3.add(locupd, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 390, 90, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hosLoc1.png"))); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, 4, 800, 540));

        jTabbedPane2.addTab("HOSPITAL LOCATION", jPanel3);

        jScrollPane2.setViewportView(jTabbedPane2);

        Adminmenu.setText("MENU");

        changepass.setText("CHANGE PASSWORD");
        changepass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changepassActionPerformed(evt);
            }
        });
        Adminmenu.add(changepass);
        Adminmenu.add(jSeparator1);

        logout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        logout.setText("LOGOUT");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        Adminmenu.add(logout);

        jMenuBar1.add(Adminmenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DirID.setText("");
        Dirname.setText("");
        Dloc.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            st=con.createStatement();
            String qr2="INSERT INTO `hospitaldirector` (`directorID`, `Dirname`, `hospitalname`, `hlocation`) VALUES ('"+DirID.getText()+"','"+Dirname.getText()+"','"+Dhos.getSelectedItem().toString()+"','"+Dloc.getText()+"')";
            st.executeUpdate(qr2);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        JOptionPane.showMessageDialog(null, "Done");

        displaydata();

        try {
            st=con.createStatement();
            String qr3="INSERT INTO `users` (`HospitalName`, `user`, `username`, `password`) VALUES ('"+Dhos.getSelectedItem().toString()+"', 'Director', 'Director','"+DirID.getText()+"')";
            st.executeUpdate(qr3);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        DirID.setText("");
        Dirname.setText("");
        Dloc.setText("");
        setHospitals();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void DlocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DlocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DlocActionPerformed

    private void DlocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DlocMouseClicked
        String hpt="";
        if(Dhos.getSelectedItem()!=null)
        hpt=Dhos.getSelectedItem().toString();
        String sql="SELECT * FROM `hospitals` WHERE `hospitalname`='"+hpt+"';";
        try {
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            String loc="";
            while(rs.next()){
                loc =rs.getString("hlocation");
                System.out.println(loc);
                Dloc.setText(loc);
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_DlocMouseClicked

    private void DirnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DirnameActionPerformed

    private void DirIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DirIDActionPerformed

    private void locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationActionPerformed

    private void locationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_locationMouseClicked
        String hpt="";
        if(icuhos.getSelectedItem()!=null)
        hpt=icuhos.getSelectedItem().toString();
        String sql="SELECT * FROM `hospitals` WHERE `hospitalname`='"+hpt+"';";
        try {
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            String loc="";
            while(rs.next()){
                loc =rs.getString("hlocation");
                //System.out.println(loc);
                location.setText(loc);
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_locationMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        icuid.setText("");
        location.setText("");
        beds.setText("");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            st=con.createStatement();
            String qr="INSERT INTO `icuupd` (`des`, `icuID`, `hospitalname`, `hlocation`, `beds`) VALUES ('NewImport','"+icuid.getText()+"', '"+icuhos.getSelectedItem().toString()+"','"+location.getText()+"','"+Integer.parseInt(beds.getText())+"');";
            st.executeUpdate(qr);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        JOptionPane.showMessageDialog(null, "Done");
        icuid.setText("");
        location.setText("");
        beds.setText("");
        //displaydata();
        setHospitals();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void icuidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_icuidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_icuidActionPerformed

    private void icuhosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_icuhosActionPerformed

    }//GEN-LAST:event_icuhosActionPerformed

    private void icuhosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icuhosMouseClicked
        String hpt="";
        if(icuhos.getSelectedItem()!=null)
        hpt=icuhos.getSelectedItem().toString();
        String sql="SELECT * FROM `hospitals` WHERE `hospitalname`='"+hpt+"';";
        try {
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            String loc="";
            while(rs.next()){
                loc =rs.getString("hlocation");
                //System.out.println(loc);
                location.setText(loc);
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }//GEN-LAST:event_icuhosMouseClicked

    private void icuhosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_icuhosItemStateChanged

    }//GEN-LAST:event_icuhosItemStateChanged

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        deletehos.setText(jTable1.getValueAt(jTable1.getSelectedRow(),0).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3deleteActionPerformed
        int x = JOptionPane.showConfirmDialog(null,"Do you want to delete this");
        if(x==0)
        {
            String hos = deletehos.getText();
            try {

                String sql = "DELETE from hospitals where HospitalName ='"+hos+"';";
                st = con.createStatement();

                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Done");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
        clear();
        deletehos.setText("");
        displaydata();
        setHospitals();

    }//GEN-LAST:event_jButton3deleteActionPerformed

    private void deletehosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletehosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deletehosActionPerformed

    private void AddLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddLocActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        clear();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            st=con.createStatement();
            String qr="insert into hospitals values('"+Adhosnm.getSelectedItem().toString()+"','"+AddLoc.getText()+"');";
            st.executeUpdate(qr);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        float lat=0.00f;
        float lang=0.00f;
        try {
            st=con.createStatement();
            String ss="SELECT * FROM `locationhos` WHERE `Hname`='"+Adhosnm.getSelectedItem().toString()+"'";
            ResultSet r=st.executeQuery(ss);
            if(r.next()){
                lat=r.getFloat("lat");
                lang=r.getFloat("lang");
               
                
            }
            
            
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
         String qr="INSERT INTO `markers` (`hname`, `lat`, `lng`) VALUES ('"+Adhosnm.getSelectedItem().toString()+"', '"+lat+"', '"+lang+"');";
         try {
            st=con.createStatement();
            //String ss="SELECT * FROM `locationhos` WHERE `Hname`='"+Adhosnm.getSelectedItem().toString()+"'";
            st.executeUpdate(qr);
            
            
            
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
         JOptionPane.showMessageDialog(null, "Done");
        clear();
        displaydata();
        setHospitals();
        String sq1="";
    }//GEN-LAST:event_jButton1ActionPerformed

    private void langActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_langActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_langActionPerformed

    private void locaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locaddActionPerformed
        String ssq="INSERT INTO `locationhos` (`ID`, `Hname`, `lat`, `lang`) VALUES (NULL, '"+lochos.getText()+"', '"+Float.valueOf(lat.getText())+"', '"+Float.valueOf(lang.getText())+"')";
        try {
            st=con.createStatement();
            //String qr="INSERT INTO `icuupd` (`des`, `icuID`, `hospitalname`, `hlocation`, `beds`) VALUES ('NewImport','"+icuid.getText()+"', '"+icuhos.getSelectedItem().toString()+"','"+location.getText()+"','"+Integer.parseInt(beds.getText())+"');";
            st.executeUpdate(ssq);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        JOptionPane.showMessageDialog(null, "Done");
        lochos.setText("");
        lat.setText("");
        lang.setText("");
        displaydata();
        setHospitals();
    }//GEN-LAST:event_locaddActionPerformed

    private void locupdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locupdActionPerformed
        String ssq="UPDATE `locationhos` SET `lat` = '"+Float.valueOf(lat.getText())+"', `lang` = '"+Float.valueOf(lang.getText())+"',`Hname` = '"+lochos.getText()+"' WHERE `locationhos`.`Hname` = '"+loctable.getValueAt(loctable.getSelectedRow(), 0)+"'";
        try {
            st=con.createStatement();
            //String qr="INSERT INTO `icuupd` (`des`, `icuID`, `hospitalname`, `hlocation`, `beds`) VALUES ('NewImport','"+icuid.getText()+"', '"+icuhos.getSelectedItem().toString()+"','"+location.getText()+"','"+Integer.parseInt(beds.getText())+"');";
            st.executeUpdate(ssq);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        JOptionPane.showMessageDialog(null, "Done");
        lochos.setText("");
        lat.setText("");
        lang.setText("");
        displaydata();
        setHospitals();
    }//GEN-LAST:event_locupdActionPerformed

    private void loctableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loctableMouseClicked
       String lhos=loctable.getValueAt(loctable.getSelectedRow(), 0).toString();
;       String latt=loctable.getValueAt(loctable.getSelectedRow(), 1).toString();
       String langt=loctable.getValueAt(loctable.getSelectedRow(), 2).toString();
       if(lhos!=null && lat!=null && lang!=null ){
           lochos.setText(lhos);
           lat.setText(latt);
           lang.setText(langt);
       }
       
    }//GEN-LAST:event_loctableMouseClicked

    private void lochosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lochosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lochosActionPerformed

    private void changepassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changepassActionPerformed
        chnagepass ch=new chnagepass();
        ch.setVisible(true);
    }//GEN-LAST:event_changepassActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
       Login lg=new Login();
       lg.setVisible(true);
       dispose();
       
    }//GEN-LAST:event_logoutActionPerformed
public void displaydata(){
        String sql="select * from hospitals";
        String sql2="select * from icu";
        String sql3="SELECT * FROM `hospitaldirector`";
        String sql4="SELECT * FROM `locationhos` order by Hname asc";
         try {
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            int i=0;
            DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
            
           while(rs.next()){
               model1.setRowCount(i+1);
               jTable1.setValueAt(rs.getObject("HospitalName"),i, 0);
               jTable1.setValueAt(rs.getObject("HLocation"),i, 1);
              
               i++;
           }
           
        } catch (SQLException e) {
             System.err.println(e.getMessage());
        }
            try {
                pst=con.prepareStatement(sql2);
                rs=pst.executeQuery();
                int j=0;
                
                DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
                
                
                while(rs.next()){
                    model.setRowCount(j+1);
                    jTable2.setValueAt(rs.getObject("icuID"),j, 0);
                    jTable2.setValueAt(rs.getObject("HospitalName"),j, 1);
                    jTable2.setValueAt(rs.getObject("hlocation"),j, 2);
                    jTable2.setValueAt(rs.getObject("Beds"),j, 3);
                    jTable2.setValueAt(rs.getObject("AvailableBeds"),j, 4);
                    j++;
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
            try {
                pst=con.prepareStatement(sql3);
                rs=pst.executeQuery();
                int j=0;
                
                DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
                
                
                while(rs.next()){
                    model.setRowCount(j+1);
                    jTable3.setValueAt(rs.getObject("directorID"),j, 0);
                    jTable3.setValueAt(rs.getObject("Dirname"),j, 1);
                    jTable3.setValueAt(rs.getObject("hospitalname"),j, 2);
                    jTable3.setValueAt(rs.getObject("hlocation"),j, 3);
                    
                    j++;
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
            try {
                pst=con.prepareStatement(sql4);
                rs=pst.executeQuery();
                int j=0;
                
                DefaultTableModel model = (DefaultTableModel) loctable.getModel();
                
                
                while(rs.next()){
                    model.setRowCount(j+1);
                    loctable.setValueAt(rs.getObject("Hname"),j, 0);
                    loctable.setValueAt(rs.getObject("lat"),j, 1);
                    loctable.setValueAt(rs.getObject("lang"),j, 2);
                    
                    
                    j++;
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
         
    }
public void clear(){
    
    AddLoc.setText(null);
}
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AdminGUI().setVisible(true);
            }
        });
    }
     public void setHospitals(){
        String sq="select HospitalName from hospitals";
        Statement s=null;
        String []n = null;
        int i=0;
            try {
            
                 st=con.createStatement();
                rs=st.executeQuery(sq);
               icuhos.removeAllItems();
                while(rs.next()){
                   //System.out.println(rs.getNString("hospitalname"));
                 
                  icuhos.addItem(rs.getNString("hospitalname"));
                  Dhos.addItem(rs.getNString("hospitalname"));
                }
                
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, ex);
            }
        String sql="SELECT `Hname` FROM `locationhos`order by `Hname` ASC ";
        Statement st=null;
       
        
            try {
            
                 st=con.createStatement();
               ResultSet r=st.executeQuery(sql);
               Adhosnm.removeAllItems();
                while(r.next()){
                   //System.out.println(rs.getNString("hospitalname"));
                 
                  Adhosnm.addItem(r.getNString("Hname"));
                  
                }
                
            } catch (SQLException ex) {
               JOptionPane.showMessageDialog(null, ex);
            }
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AddLoc;
    private javax.swing.JComboBox<String> Adhosnm;
    private javax.swing.JMenu Adminmenu;
    private javax.swing.JComboBox<String> Dhos;
    private javax.swing.JTextField DirID;
    private javax.swing.JTextField Dirname;
    private javax.swing.JTextField Dloc;
    private javax.swing.JTextField beds;
    private javax.swing.JMenuItem changepass;
    private javax.swing.JTextField deletehos;
    private javax.swing.JComboBox<String> icuhos;
    private javax.swing.JTextField icuid;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton3delete;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField lang;
    private javax.swing.JTextField lat;
    private javax.swing.JButton locadd;
    private javax.swing.JTextField location;
    private javax.swing.JTextField lochos;
    private javax.swing.JTable loctable;
    private javax.swing.JButton locupd;
    private javax.swing.JMenuItem logout;
    // End of variables declaration//GEN-END:variables
}
