/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class DirectorGUI extends javax.swing.JFrame {
        Connection con=null;
         //Timer timer=new Timer(40, this);
        PreparedStatement pst=null;
        Statement st=null;
        //ResultSet rs=null;
        String hos=null;
       //String hos="Kuliyapitiya Base Hospital";
        String id="";
        String dname="";
        
    /**
     * Creates new form DirectorGUI
     */
    public DirectorGUI() {
        initComponents();
        this.setLocation(300, 100);
        initialize();
        try {
            con=DbUtill.getConnection();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            
        }
        hosname.setText(hos);
        hosname2.setText(hos);
        getDirectrId();
        tableup();
        setupdcnt();
        setHospitals();
        drtext.hide();
        drdone.hide();
        //timer.start();
        
        //System.out.println(id);
    }

    DirectorGUI(String hos) {
        this.hos=hos;
        initComponents();
         this.setLocation(300, 100);
         hosname.setText(hos);
        initialize();
        try {
            con=DbUtill.getConnection();
            
            
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, e);
            System.err.println(e);
        }
        hosname.setText(hos);
        hosname2.setText(hos);
         getDirectrId();
        tableup();
        setupdcnt();
        setHospitals();
        drtext.hide();
        drdone.hide();
        //timer.start();
       
    }
    private void initialize(){
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("ico.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        hosname = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        count = new javax.swing.JLabel();
        drtext = new javax.swing.JTextField();
        drlable = new javax.swing.JLabel();
        drdone = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        hosname2 = new javax.swing.JLabel();
        amloc = new javax.swing.JLabel();
        amdrID = new javax.swing.JTextField();
        amdrname = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        amd = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        amno = new javax.swing.JTextField();
        am_hos = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        dirdetails = new javax.swing.JTable();
        drhos = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jButton2.setText("jButton2");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("jMenu3");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DIRECTOR");
        setBackground(new java.awt.Color(120, 181, 225));
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBackground(new java.awt.Color(120, 181, 225));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        hosname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(hosname, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 420, 30));

        jTable1.setBackground(new java.awt.Color(229, 236, 246));
        jTable1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "ICU ID", "Total Beds", "Current Available Beds"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(230, 250, 250));
        jTable1.setInheritsPopupMenu(true);
        jTable1.setShowHorizontalLines(false);
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 420, 50));
        jPanel1.add(count, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, 44, 30));

        drtext.setText("Dr.");
        jPanel1.add(drtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 90, 190, 30));

        drlable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jPanel1.add(drlable, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 200, 30));

        drdone.setBackground(new java.awt.Color(88, 126, 195));
        drdone.setText("Done");
        drdone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drdoneActionPerformed(evt);
            }
        });
        jPanel1.add(drdone, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, -1, 30));

        edit.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        edit.setText("EDIT");
        edit.setBorderPainted(false);
        edit.setContentAreaFilled(false);
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPanel1.add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, -1, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Dir_Icu.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 570, 540));

        jPanel2.setBackground(new java.awt.Color(229, 236, 246));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 220, 50));

        jTabbedPane1.addTab("ICU", jPanel1);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(hosname2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 410, 20));

        amloc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                amlocMouseClicked(evt);
            }
        });
        jPanel3.add(amloc, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 220, 20));

        amdrID.setBackground(new java.awt.Color(169, 205, 230));
        amdrID.setBorder(null);
        jPanel3.add(amdrID, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 216, 230, -1));

        amdrname.setBackground(new java.awt.Color(169, 205, 230));
        amdrname.setBorder(null);
        jPanel3.add(amdrname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 256, 240, -1));

        jScrollPane3.setBackground(new java.awt.Color(169, 205, 230));

        amd.setBackground(new java.awt.Color(169, 205, 230));
        amd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Ambulance No", "Hospital", "Location", "Driver ID"
            }
        ));
        amd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                amdMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(amd);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 440, 160));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/amadd.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 60, 60));

        amno.setBackground(new java.awt.Color(162, 201, 229));
        amno.setBorder(null);
        jPanel3.add(amno, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 230, -1));
        jPanel3.add(am_hos, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 140, 230, 20));

        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/amupd.png"))); // NOI18N
        update.setBorderPainted(false);
        update.setContentAreaFilled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel3.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Dir_Am.png"))); // NOI18N
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, 4, 570, 510));

        jTabbedPane1.addTab("AMBULANCE", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane4.setBackground(new java.awt.Color(219, 223, 233));

        dirdetails.setBackground(new java.awt.Color(219, 223, 233));
        dirdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DriverID", "Driver Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(dirdetails);

        jPanel4.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 400, 270));
        jPanel4.add(drhos, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 380, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/drverdet.png"))); // NOI18N
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, 4, 570, 510));

        jTabbedPane1.addTab("DRIVERS", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 540));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(445, 542));
        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, -1));

        jMenu4.setText("MENU");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("LOGOUT");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem2);

        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        updates up=new updates(hos);
        up.setVisible(true);
        dispose();
        count.setText("0");
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        try {
            st=con.createStatement();
            String qr="INSERT INTO `ambulance` (`vehicalno`, `hospitalname`, `hlocation`) VALUES ('"+amno.getText()+"', '"+am_hos.getText()+"', '"+amloc.getText()+"')";
            st.executeUpdate(qr);
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        try {
            
            String qr1="INSERT INTO `driver` (`driverID`, `Dname`, `DirectorID`) VALUES ('"+amdrID.getText()+"', '"+amdrname.getText()+"', '"+id+"')";
            st=con.createStatement();
            st.executeUpdate(qr1);
           
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        try {
            
            String qr2="INSERT INTO `ambulancedriver` (`vehicalno`, `driverID`, `hospitalname`, `hlocation`) VALUES ('"+amno.getText()+"', '"+amdrID.getText()+"', '"+am_hos.getText()+"', '"+amloc.getText()+"')";
            st=con.createStatement();
            st.executeUpdate(qr2);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        JOptionPane.showMessageDialog(null, "Done");
        amno.setText("");
        amloc.setText("");
        amdrID.setText("");
        amdrname.setText("");
        tableup();
        setHospitals();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void amlocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_amlocMouseClicked

        
    }//GEN-LAST:event_amlocMouseClicked

    private void amdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_amdMouseClicked
      String sqld="SELECT * FROM `driver` WHERE `driverID`='"+amd.getValueAt(amd.getSelectedRow(),3).toString()+"';";       
        String name="";
        try {
            
            pst=con.prepareStatement(sqld);
           ResultSet rs5=pst.executeQuery();
            if(rs5.next()){
                
                name = rs5.getString("Dname");
                
               
            }
            
                
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            System.out.println(ex);
        }
        if(!name.isEmpty())
            amdrname.setText(name);
        
        
        
       amno.setText(amd.getValueAt(amd.getSelectedRow(),0).toString());
       am_hos.setText(amd.getValueAt(amd.getSelectedRow(),1).toString());
       amloc.setText(amd.getValueAt(amd.getSelectedRow(),2).toString());
       amdrID.setText(amd.getValueAt(amd.getSelectedRow(),3).toString());
       
       
       
    }//GEN-LAST:event_amdMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        int r=amd.getSelectedRow();
        try {
            st=con.createStatement();
            String qr="UPDATE `ambulance` SET `vehicalno` = '"+amno.getText()+"' WHERE `ambulance`.`vehicalno` = '"+amd.getValueAt(amd.getSelectedRow(),0).toString()+"' AND `ambulance`.`hospitalname` = '"+am_hos.getText()+"' AND `ambulance`.`hlocation` = '"+amloc.getText()+"'";
            st.executeUpdate(qr);
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        try {
            int p=amd.getSelectedRow();
            String qr1="INSERT INTO `driver` (`driverID`, `Dname`, `DirectorID`) VALUES ('"+amdrID.getText()+"', '"+amdrname.getText()+"', '"+id+"')";
            String qr11=" UPDATE `driver` SET `driverID` = '"+amdrID.getText()+"', `Dname` = '"+amdrname.getText()+"' WHERE `driver`.`driverID` = '"+amd.getValueAt(p,3)+"' AND`driver`.`DirectorID` = '"+id+"';";
            if(driver()){
            
            st=con.createStatement();
            st.executeUpdate(qr11);
            }else{
               st=con.createStatement();
               st.executeUpdate(qr1); 
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        try {
            st=con.createStatement();
            String qr="UPDATE `ambulancedriver` SET `vehicalno` = '"+amno.getText()+"', `driverID` = '"+amdrID.getText()+"' WHERE `ambulancedriver`.`vehicalno` = '"+amd.getValueAt(r,0).toString()+"' AND `ambulancedriver`.`driverID` = '"+amd.getValueAt(r,3).toString()+"' AND `ambulancedriver`.`hospitalname` = '"+am_hos.getText()+"' AND `ambulancedriver`.`hlocation` = '"+amloc.getText()+"' ";
            st.executeUpdate(qr);
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        
        JOptionPane.showMessageDialog(null, "Done");
        amno.setText("");
        amloc.setText("");
        amdrID.setText("");
        amdrname.setText("");
        tableup();
        setHospitals();
    }//GEN-LAST:event_updateActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        drtext.setVisible(true);
        drdone.setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void drdoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drdoneActionPerformed
        String nm=drtext.getText();
        String sq1="UPDATE `hospitaldirector` SET `Dirname` = '"+nm+"' WHERE `hospitaldirector`.`directorID` = '"+id+"'";
        try {
            st=con.createStatement();
            
            st.executeUpdate(sq1);
            getDirectrId();
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        drtext.hide();
        drdone.hide();
    }//GEN-LAST:event_drdoneActionPerformed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
       setupdcnt();
    }//GEN-LAST:event_formMouseMoved

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
       // setupdcnt();
    }//GEN-LAST:event_formWindowGainedFocus

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       Login lg=new Login();
       lg.setVisible(true);
       dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    public void setHospitals(){
        am_hos.setText(hos);
        drhos.setText(hos);
        String sql="SELECT * FROM `hospitals`WHERE `hospitalname`='"+hos+"';";
        try {
            pst=con.prepareStatement(sql);
            ResultSet rs0=pst.executeQuery();
            String loc="";
            while(rs0.next()){
                loc =rs0.getString("hlocation");
                //System.out.println(loc);
                amloc.setText(loc);
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            
        }
        
        
    }
    public void getDirectrId(){
        String sqll="SELECT * FROM `hospitaldirector` WHERE `hospitalname`='"+hos+"';";       
        
        try {
            
           pst=con.prepareStatement(sqll);
           ResultSet rs3=pst.executeQuery();
            if(rs3.next()){
                
                id = rs3.getString("directorID");
                dname=rs3.getString("Dirname");
                drlable.setText(dname);
                
               
            }
            
                
        } catch (SQLException ex) {
           JOptionPane.showMessageDialog(null,ex);
        }
    }
    public void setupdcnt(){
        
//        String sql="SELECT `icuID` FROM `icu` WHERE `hospitalname`='"+hos+"';";       
//        String id="";
//        try {
//            
//            pst=con.prepareStatement(sql);
//           ResultSet rs4=pst.executeQuery();
//            if(rs4.next()){
//                
//                id = rs4.getString("icuID");
//                
//               
//            }
//            
//                
//        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(null, ex);
//        }
//        if(!id.isEmpty())
         try {
             int cnt=0;
            String sq="SELECT * FROM `icuupd` WHERE `hospitalname`='"+hos+"';";
            pst=con.prepareStatement(sq);
            ResultSet rs4=pst.executeQuery();
           while(rs4.next()){
               cnt++;
           }
           count.setText(String.valueOf(cnt));
           
            
            
            
                
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
            //System.err.println(ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DirectorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DirectorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DirectorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DirectorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DirectorGUI().setVisible(true);
            }
        });
        
    }
    public void tableup(){
        String sql="SELECT * FROM `icu` WHERE `hospitalname`='"+hos+"';";
        String sql2="SELECT * FROM `ambulancedriver` WHERE `hospitalname`='"+hos+"';";
        
        String sql3="SELECT * FROM `driver` WHERE `DirectorID`='"+id+"';";

         try {
            pst=con.prepareStatement(sql);
            ResultSet rs1=pst.executeQuery();
            int i=0;
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
           while(rs1.next()){
               model.setRowCount(i+1);
               jTable1.setValueAt(rs1.getObject("icuID"),i, 0);
               jTable1.setValueAt(rs1.getObject("Beds"),i, 1);
               jTable1.setValueAt(rs1.getObject("AvailableBeds"),i, 2);
              
               i++;
           }
           
        }catch(SQLException ex){
                  JOptionPane.showMessageDialog(null, ex);
                   //System.err.println(ex);
        }
         try {
            pst=con.prepareStatement(sql2);
            ResultSet rs2=pst.executeQuery();
            int i=0;
            DefaultTableModel model = (DefaultTableModel) amd.getModel();
           while(rs2.next()){
               model.setRowCount(i+1);
               amd.setValueAt(rs2.getObject("vehicalno"),i, 0);
               amd.setValueAt(rs2.getObject("driverID"),i, 3);
               amd.setValueAt(rs2.getObject("hospitalname"),i, 1);
               amd.setValueAt(rs2.getObject("hlocation"),i, 2);
               
              
               i++;
           }
           
        }catch(SQLException ex){
                 JOptionPane.showMessageDialog(null, ex);
                   //System.err.println(ex);
        }
         try {
            pst=con.prepareStatement(sql3);
            ResultSet rs02=pst.executeQuery();
            int i=0;
            DefaultTableModel model = (DefaultTableModel) dirdetails.getModel();
           while(rs02.next()){
               model.setRowCount(i+1);
               dirdetails.setValueAt(rs02.getObject("driverID"),i, 0);
               dirdetails.setValueAt(rs02.getObject("Dname"),i, 1);
              
              
               i++;
           }
           
        }catch(SQLException ex){
                 JOptionPane.showMessageDialog(null, ex);
                   //System.err.println(ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel am_hos;
    private javax.swing.JTable amd;
    private javax.swing.JTextField amdrID;
    private javax.swing.JTextField amdrname;
    private javax.swing.JLabel amloc;
    private javax.swing.JTextField amno;
    private javax.swing.JLabel count;
    private javax.swing.JTable dirdetails;
    private javax.swing.JButton drdone;
    private javax.swing.JLabel drhos;
    private javax.swing.JLabel drlable;
    private javax.swing.JTextField drtext;
    private javax.swing.JButton edit;
    private javax.swing.JLabel hosname;
    private javax.swing.JLabel hosname2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    private boolean driver() {
        String s="SELECT * FROM `driver` WHERE `driverID`='"+amdrID.getText()+"';";
        boolean b=false;
        try {
            st=con.createStatement();
            ResultSet r=st.executeQuery(s);
            if(r.next()){
                b=true;
            }
           
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return b;
    }

    
}
