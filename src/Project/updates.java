/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class updates extends javax.swing.JFrame {
    Connection con=null;
    
        PreparedStatement pst=null;
        Statement st=null;
        ResultSet rs=null;
        int count=0;
        String hos=null;
       // String hos="Kuliyapitiya Base hospital";
    /**
     * Creates new form NewJFrame
     */
    public updates() {
        initComponents();
        try {
            
            con=DbUtill.getConnection();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        tableup();
    }
    public updates(String hos) {
        initComponents();
        try {
            
            con=DbUtill.getConnection();
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        this.hos=hos;
        tableup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(253, 255, 239));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Discriptoin", "Change", "Athorize", "Decline"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setOpaque(false);
        jTable1.setShowHorizontalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 430, 110));

        jButton2.setText("DONE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, -1, -1));

        jButton3.setText("CLOSE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Updatebackground.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 520, 310));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      
        tableup(); 
       
        
         
        
         
    
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DirectorGUI DG=new DirectorGUI(hos);
        DG.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       int x = JOptionPane.showConfirmDialog(null,"Do you want to proceed further");
       if(x==0){
        String b="";
        String b1="";
        Object ob;
        Object ob1;
           for(int i=0;i<count;i++){
                ob=jTable1.getValueAt(i,3);
                
                ob1=jTable1.getValueAt(i,4);
                if(ob!=null)
                b=ob.toString();
                if(ob1!=null)
                b1=ob1.toString();
                if(ob!=null|| ob1!=null){
                    if(b.equalsIgnoreCase("true")){
                           if(jTable1.getValueAt(i,1).toString().equalsIgnoreCase("Bedchange")){
                                    String sql="UPDATE `icu` SET `Beds` = '"+jTable1.getValueAt(i,2)+"' WHERE `icu`.`icuID` = '"+jTable1.getValueAt(i, 0)+"';";

                                    try {
                                           st=con.createStatement();
                                           st.executeUpdate(sql);
                                       } catch (SQLException ex) {
                                           JOptionPane.showMessageDialog(null, ex);
                                       }
                                    }
                                    else if(jTable1.getValueAt(i,1).toString().equalsIgnoreCase("NewImport")){
                                        String sqll="SELECT `hlocation` FROM `hospitals` WHERE `hospitalname`='"+hos+"';";       
                                        String loc="";
                                        try {

                                            pst=con.prepareStatement(sqll);
                                           ResultSet rs3=pst.executeQuery();
                                            if(rs3.next()){

                                                loc= rs3.getString("hlocation");


                                            }


                                        } catch (SQLException ex) {
                                            JOptionPane.showMessageDialog(null, ex);
                                        }
                                        String sq="INSERT INTO `icu` (`icuID`, `hospitalname`, `hlocation`, `Beds`) VALUES ('"+jTable1.getValueAt(i, 0)+"', '"+hos+"', '"+loc+"', '"+jTable1.getValueAt(i,2)+"');";
                                        try {
                                           st=con.createStatement();
                                           st.executeUpdate(sq);
                                       } catch (SQLException ex) {
                                           JOptionPane.showMessageDialog(null, ex);
                                       }
                                       try {
                                            st=con.createStatement();
                                            String qr3="INSERT INTO `users` (`HospitalName`, `user`, `username`, `password`) VALUES ('"+hos+"', 'ICU Operator', 'ICU Operator','"+jTable1.getValueAt(i, 0)+"')";
                                            st.executeUpdate(qr3);
                                        } catch (SQLException e) {
                                            JOptionPane.showMessageDialog(null, e);
                                        } 

                                    }
                                    try {
                                            st=con.createStatement();
                                            String qr4="UPDATE `markers` SET `totbeds` ='"+jTable1.getValueAt(i,2)+"' WHERE `markers`.`hname`='"+hos+"'";
                                            st.executeUpdate(qr4);
                                        } catch (SQLException e) {
                                            JOptionPane.showMessageDialog(null, e);
                                        } 
                                       String del="DELETE FROM `icuupd` WHERE `icuupd`.`icuID` = '"+jTable1.getValueAt(i, 0)+"' AND `icuupd`.`beds` = '"+jTable1.getValueAt(i, 2)+"';";
                                       try {
                                           st=con.createStatement();
                                           st.executeUpdate(del);
                                       } catch (SQLException ex) {
                                           JOptionPane.showMessageDialog(null, ex);
                                       }
                   
                                       JOptionPane.showMessageDialog(null, "Done");
                
      
                    }else if(b1.equalsIgnoreCase("true")){
               String del="DELETE FROM `icuupd` WHERE `icuupd`.`icuID` = '"+jTable1.getValueAt(i, 0)+"' AND `icuupd`.`beds` = '"+jTable1.getValueAt(i, 2)+"';";
                   try {
                       st=con.createStatement();
                       st.executeUpdate(del);
                   } catch (SQLException ex) {
                       JOptionPane.showMessageDialog(null, ex);
                   }
                   JOptionPane.showMessageDialog(null, "Declined Sucessfully");
           }
                     
           }    }
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updates.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updates().setVisible(true);
            }
        });
    }
     public void tableup(){
        String sqll="SELECT `icuID` FROM `icu` WHERE `hospitalname`='"+hos+"';";       
        String id="";
        try {
            
            pst=con.prepareStatement(sqll);
           ResultSet rs3=pst.executeQuery();
            if(rs3.next()){
                
                id = rs3.getString("icuID");
                
               
            }
            
                
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        //String sq="";
        String sql="SELECT * FROM `icuupd` WHERE `icuID` ='"+id+"' or `hospitalname`='"+hos+"';";
         try {
             count=0;
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
             DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); 
            int i=0;
            while(rs.next()){
               count++;
                model.setRowCount(count);
                jTable1.setValueAt(rs.getObject("icuID"),i, 0);
                jTable1.setValueAt(rs.getObject("des"),i, 1);
               jTable1.setValueAt(rs.getObject("Beds"),i, 2);
               i++;
                
            }
            
      
      
             
        }catch(SQLException ex){
                   JOptionPane.showMessageDialog(null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
